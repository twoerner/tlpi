Wow, am I ever making a mess of this public git repository!
Oh well, that's half the fun of learning :-)

It appears that the strategy I want to employ is the following:
- do work-in-progress stuff on the "wip" branch
- commit to the "wip" branch any old garbage -- i.e. doesn't have to compile
- when done with a program, commit its fully working version to "wip"
- switch to "master" branch
- perform:
	(master)$ git merge --squash wip
	(master)$ git commit -av
- now doing something like "git show-branch" or "gitk" will show a "wip" branch
  with all the intermediate work leading up the final product, and a "master"
  branch with all the final work only

- if I then want to input a bunch of listings, irregardless of the fact they
  don't really need wips, put them on the wip branch and squash-commit them
  onto the master
